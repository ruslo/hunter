### Input params check

string(COMPARE EQUAL "@configure_command@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "configure_command is empty")
endif()

string(COMPARE EQUAL "@qt_component@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "qt_component is empty")
endif()

string(COMPARE EQUAL "@hunter_self@" "" is_empty)
if(is_empty)
  message(FATAL_ERROR "hunter_self is empty")
endif()

### -- end

include("@hunter_self@/scripts/clear-all.cmake")

### Build list of components.

# From [documentation](http://doc.qt.io/qt-5/configure-options.html):
#
#     Configure's -skip option allows certain Qt submodules to be excluded
#     from the Qt build. These submodules correspond to the Git submodules
#     in the standard Qt 5 repository.
#
# According to 'qtbase/configure' script from sources '-skip', option checks
# directories by pattern 'qt*' (find "Attempting to skip non-existent module")

file(
    GLOB
    directories_list
    RELATIVE "${CMAKE_CURRENT_LIST_DIR}"
    "${CMAKE_CURRENT_LIST_DIR}/qt*"
)

# We need only directories. Exclude files like qt.pro
set(components)
foreach(dir ${directories_list})
  if(IS_DIRECTORY "${CMAKE_CURRENT_LIST_DIR}/${dir}")
    list(APPEND components "${dir}")
  endif()
endforeach()

set(required_qtdeclarative NO)
set(
    qtdeclarative_list
    qt3d
    qtcanvas3d
    qtenginio
    qtgraphicaleffects
    qtlocation
    qtmultimedia
    qtquickcontrols
    qtsensors
    qtwebchannel
    qtwebkit
    qtwebsockets
)
foreach(component ${qtdeclarative_list})
  string(COMPARE EQUAL "@qt_component@" "${component}" is_equal)
  if(is_equal)
    set(required_qtdeclarative YES)
  endif()
endforeach()

# Skip all components except one we need
set(components_opts)
set(component_found FALSE)
foreach(component ${components})
  string(COMPARE NOTEQUAL "@qt_component@" "${component}" skip)
  if(skip)
    string(COMPARE EQUAL "${component}" "qtbase" is_qtbase)
    string(COMPARE EQUAL "${component}" "qtdeclarative" is_qtdeclarative)
    if(is_qtbase)
      # Can't be skipped
    elseif(is_qtdeclarative AND required_qtdeclarative)
      # Do not skip. See:
      # * https://github.com/ruslo/hunter/issues/116#issuecomment-127040329
    else()
      list(APPEND components_opts "-skip" "${component}")
    endif()
  else()
    set(component_found TRUE)
  endif()
endforeach()

if(NOT component_found)
  message(FATAL_ERROR "Qt component `@qt_component@` not found")
endif()

set(configure_command "@configure_command@")
list(APPEND configure_command ${components_opts})

message("Qt configure command: ${configure_command}")

execute_process(COMMAND ${configure_command} RESULT_VARIABLE result)

if(NOT result EQUAL 0)
  message(FATAL_ERROR "Qt configure failed: ${result}")
endif()
