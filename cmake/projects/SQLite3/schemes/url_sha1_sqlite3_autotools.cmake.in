# Copyright (c) 2013, 2015 Ruslan Baratov, Alexandre Pretyman
# All rights reserved.

cmake_minimum_required(VERSION 3.0)
project(Hunter)

list(APPEND CMAKE_MODULE_PATH "@HUNTER_SELF@/cmake/modules")

include(hunter_autotools_project)
include(hunter_status_debug)
include(hunter_test_string_not_empty)
include(hunter_user_error)

hunter_status_debug("Scheme: url_sha1_sqlite3_autotools")

if("@MSVC@")
  hunter_user_error("Autotools scheme not supported with Visual Studio")
endif()

# Check preconditions
hunter_test_string_not_empty("@HUNTER_SELF@")
hunter_test_string_not_empty("@HUNTER_EP_NAME@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_URL@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SHA1@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_BUILD_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_INSTALL_PREFIX@")
hunter_test_string_not_empty("@HUNTER_INSTALL_PREFIX@")

# Defines set of compile-time options for SQLite. Use these like:
#   hunter_cmake_args(SQLite3 CMAKE_ARGS SQLITE_THREADSAFE=0)
# This list is not comprehensive; in particular, options that may be
# overridden via PRAGMA settings or are simple defaults are
# omitted. All options under "Recommended Compile-time Options" are
# present.
# See: https://www.sqlite.org/compile.html
set(list_of_sqlite_args
  # Performance-related options
  SQLITE_THREADSAFE
  SQLITE_DEFAULT_MEMSTATUS
  SQLITE_DEFAULT_WAL_SYNCHRONOUS
  SQLITE_DEFAULT_SYNCHRONOUS
  SQLITE_LIKE_DOESNT_MATCH_BLOBS
  SQLITE_MAX_EXPR_DEPTH
  SQLITE_OMIT_DECLTYPE
  SQLITE_OMIT_DEPRECATED
  SQLITE_OMIT_PROGRESS_CALLBACK
  SQLITE_OMIT_SHARED_CACHE
  # Hard maximums for various runtime sqlite3_limit() settings
  SQLITE_MAX_SCHEMA_RETRY
  SQLITE_MAX_WORKER_THREADS
  SQLITE_MAX_ATTACHED
  SQLITE_MAX_COLUMN
  SQLITE_MAX_COMPOUND_SELECT
  SQLITE_MAX_EXPR_DEPTH
  SQLITE_MAX_FUNCTION_ARG
  SQLITE_MAX_LENGTH
  SQLITE_MAX_LIKE_PATTERN_LENGTH
  SQLITE_MAX_PAGE_COUNT
  SQLITE_MAX_SQL_LENGTH
  SQLITE_MAX_VARIABLE_NUMBER
  # Misc options without runtime overrides
  SQLITE_MINIMUM_FILE_DESCRIPTOR
  SQLITE_POWERSAFE_OVERWRITE
  SQLITE_4_BYTE_ALIGNED_MALLOC
  SQLITE_DIRECT_OVERFLOW_READ
  YYSTACKDEPTH
  # Optional features
  SQLITE_ENABLE_UNLOCK_NOTIFY
  SQLITE_ENABLE_RTREE
  SQLITE_ENABLE_8_3_NAMES
  SQLITE_ENABLE_API_ARMOR
  SQLITE_ENABLE_ATOMIC_WRITE
  SQLITE_ENABLE_COLUMN_METADATA
  SQLITE_ENABLE_DBSTAT_VTAB
  SQLITE_ENABLE_EXPLAIN_COMMENTS
  SQLITE_ENABLE_LOCKING_STYLE
  SQLITE_ENABLE_MEMORY_MANAGEMENT
  SQLITE_ENABLE_MEMSYS3
  SQLITE_ENABLE_MEMSYS5
  SQLITE_ENABLE_NULL_TRIM
  SQLITE_ENABLE_PREUPDATE_HOOK
  SQLITE_ENABLE_RBU
  SQLITE_ENABLE_SESSION
  SQLITE_ENABLE_STMT_SCANSTATUS
  SQLITE_RTREE_INT_ONLY
  SQLITE_ENABLE_SQLLOG
  SQLITE_ENABLE_STAT2
  SQLITE_ENABLE_STAT3
  SQLITE_ENABLE_STAT4
  SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION
  SQLITE_SOUNDEX
  # Disabling default features
  SQLITE_DISABLE_LFS
  SQLITE_DISABLE_DIRSYNC
  SQLITE_DISABLE_FTS3_UNICODE
  SQLITE_DISABLE_FTS4_DEFERRED
  SQLITE_DISABLE_INTRINSIC
  # Amalgamation-related options (https://www.sqlite.org/amalgamation.html)
  SQLITE_ENABLE_FTS3
  SQLITE_ENABLE_FTS3_PARENTHESIS
  SQLITE_ENABLE_FTS3_TOKENIZER
  SQLITE_ENABLE_FTS4
  SQLITE_ENABLE_FTS5
  SQLITE_ENABLE_ICU
  SQLITE_ENABLE_IOTRACE
  )

set(sqlite_cppflags "-DSQLITE_ENABLE_UNLOCK_NOTIFY=1 -DSQLITE_ENABLE_RTREE=1")
foreach(x ${list_of_sqlite_args})
  if(DEFINED "${x}")
    set(sqlite_cppflags "${sqlite_cppflags} -D${x}=${${x}}")
  endif()
endforeach()

hunter_autotools_project("@HUNTER_EP_NAME@"
  HUNTER_SELF
  "@HUNTER_SELF@"
  URL
  @HUNTER_PACKAGE_URL@
  URL_HASH
  SHA1=@HUNTER_PACKAGE_SHA1@
  DOWNLOAD_DIR
  "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
  SOURCE_DIR
  "@HUNTER_PACKAGE_SOURCE_DIR@"
  BUILD_DIR
  "@HUNTER_PACKAGE_BUILD_DIR@"
  INSTALL_DIR
  "@HUNTER_PACKAGE_INSTALL_PREFIX@"
  GLOBAL_INSTALL_DIR
  "@HUNTER_INSTALL_PREFIX@"
  PARALLEL_JOBS
  "@HUNTER_JOBS_OPTION@"
  PACKAGE_CONFIGURATION_TYPES
  "@HUNTER_PACKAGE_CONFIGURATION_TYPES@"
  CPPFLAGS "${sqlite_cppflags}"
  )
