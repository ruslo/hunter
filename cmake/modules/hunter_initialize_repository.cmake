include(CMakeParseArguments)
include(hunter_internal_error)
include(hunter_test_string_not_empty)

function(hunter_initialize_repository)
  cmake_parse_arguments(hir "" "NAME;VERSION" "" "${ARGV}")
  hunter_test_string_not_empty("${hir_NAME}")
  hunter_test_string_not_empty("${hir_VERSION}")
  list(FIND HUNTER_REPOSITORIES "${hir_NAME}-${hir_VERSION}" has_repo)
  if(NOT has_repo EQUAL -1)
    hunter_internal_error("Internal repo has already been initialized")
  endif()

  if(NOT "${hir_NAME}" MATCHES "[-a-zA-Z0-9._]*")
    hunter_internal_error("Repository name is not acceptable")
  endif()
  if(NOT "${hir_VERSION}" MATCHES "[-a-zA-Z0-9._]*")
    hunter_internal_error("Repository version is not acceptable")
  endif()
  string(REGEX REPLACE "\\." "_" hir_NAME "${hir_NAME}")
  string(REGEX REPLACE "\\." "_" hir_VERSION "${hir_VERSION}")
  set(HUNTER_CURRENT_REPOSITORY_NAME "${hir_NAME}" PARENT_SCOPE)
  set(HUNTER_CURRENT_REPOSITORY_VERSION "${hir_VERSION}" PARENT_SCOPE)
endfunction()
